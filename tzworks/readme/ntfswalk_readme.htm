<html>

<head>
    <title>ntfswalk readme </title>
    <style type="text/css">
        div
        {
            margin-left: 1em;
        }
    </style>
</head>

<body bgcolor="white"">

<h2 align="center"><a name="index">Windows $MFT and NTFS Metadata Extractor Tool - <i>ntfswalk</i></a></h2>
<h3 align="center">(version 0.51)<br /><br /></h3>
<!--WARNING_TAG-->

<hr />
<ul>
    <li> <a href="#eula"> End User's License Agreement (EULA) </a></li>

    <li> <a href="#about"> About the <b><i>ntfswalk</i></b> Tool </a></li>
    <li> <a href="#usage">Usage</a></li>
    <li> <a href="#example">Examples</a></li>
    <li> <a href="#auth"> Authentication and License File </a></li>
    <li> <a href="#version_history"> Version history </a></li>
    <li> <a href="#references"> References </a></li>
</ul>


<hr/><!---------------------EULA---------------------->
<h2><a name="eula">TZWorks Tools included in the SANS Investigative Forensic Toolkit (SIFT)</br>
END USER LICENSE AGREEMENT (EULA)</a></h2>

<h3>USER AGREEMENT</h3>
<div>
<p>Permission to use the TZWorks, LLC software and related documentation (&quot;Software&quot;) 
is for <b>Demonstration and Testing use ONLY</b>. The User Agreement, Disclaimer, and/or Software 
may change from time to time.  By continuing to use the Software after those changes become 
effective, you agree to be bound by all such changes.  Permission to use the Software is granted 
provided that (1) use of such Software is for <b>Demonstration and Testing use only</b> and 
(2) the Software is not resold, transferred or distributed to any other person or entity.  
<i><font color="red">To use the Software for commercial or business purposes, a separate 
license is required.</font></i> Contact TZWorks, LLC 
(<a href="mailto:info@tzworks.net">info&#64;tzworks.net</a>) 
for more information regarding licensing. To redistribute the Software, approval in writing 
is required from TZWorks, LLC.  These terms do not give the user any rights in intellectual 
property or technology, but only a limited right to use the Software for <b>Demostrations and 
Testing</b>.  TZWorks, LLC retains all rights to ownership of this Software.</p>
</div>

<h3>DISCLAIMER</h3>    
<div>
<p>The user agrees that this Software is experimental in nature and use of the Software is 
at user's sole risk.  The Software could include technical inaccuracies or errors.  Changes 
are periodically added to the information herein, and TZWorks, LLC may make improvements and/or 
changes to Software at any time.  TZWorks, LLC makes no representations about the accuracy or 
usability of the Software for any purpose.</p>

<p>ALL SOFTWARE ARE PROVIDED &quot;AS IS&quot; AND &quot;WHERE IS&quot; WITHOUT WARRANTY 
OF ANY KIND INCLUDING ALL IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, FITNESS 
FOR ANY PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT.  IN NO EVENT SHALL TZWORKS, LLC 
BE LIABLE FOR ANY KIND OF DAMAGE RESULTING FROM ANY CAUSE OR REASON, ARISING OUT OF IT 
IN CONNECTION WITH THE USE OR PERFORMANCE OF INFORMATION AVAILABLE FROM THIS SOFTWARE. </p>
</div>

<h3>REMOVAL</h3>
<div>
<p>The Software are the original works of TZWorks, LLC.  However, to be in compliance with 
the Digital Millennium Copyright Act of 1998 (&quot;DMCA&quot;) we agree to investigate and disable any 
material for infringement of copyright. Contact TZWorks, LLC at email address: 
<a href="mailto:info@tzworks.net">info&#64;tzworks.net</a>, regarding any DMCA concerns. </p>
</div>

<!-- 
This is section is commented out, since it is only used by the tool binary

USER_AGREEMENT_START
-------------------------------- User Agreement -----------------------------

Permission to use the TZWorks, LLC software and related documentation
("Software") is for Demonstration and Testing use ONLY. The User Agreement, 
Disclaimer, and/or Software may change from time to time.  By continuing to 
use the Software after those changes become effective, you agree to be 
bound by all such changes.  Permission to use the Software is granted 
provided that (1) use of such Software is for Demonstration and Testing use 
only and (2) the Software is not resold, transferred or distributed to any 
other person or entity.  To use the Software for commercial or business 
purposes, a separate license is required. Contact TZWorks, LLC 
(info@tzworks.net) for more information regarding licensing. To redistribute
the Software, approval in writing is required from TZWorks, LLC.  These 
terms do not give the user any rights in intellectual property or technology,
but only a limited right to use the Software for Demostrations and Testing.
TZWorks, LLC retains all rights to ownership of this Software.
USER_AGREEMENT_END

DISCLAIMER_START
---------------------------------- DISCLAIMER -------------------------------

The user agrees that all Software made available by TZWorks, LLC is
experimental in nature and use of the Software is at user's sole risk. The
Software could include technical inaccuracies or errors.  Changes are 
periodically added to the information herein, and TZWorks, LLC may make 
improvements and/or changes to Software and/or related documentation at any
time.  TZWorks, LLC makes no representations about the accuracy or usability
of the Software for any purpose.  All software are provided "AS IS" and 
"WHERE IS" without warranty of any kind including all implied warranties and
conditions of merchantability, fitness for any particular purpose, title and
non-infringement.  In no event shall TZWorks, LLC be liable for any kind of 
damage resulting from any cause or reason, arising out of it in connection
with the use or performance of information available from this Software.
DISCLAIMER_END
-->




<hr/><!---------------------About the <b><i>ntfswalk</i></b> Tool---------------------->
<h2><a name="about">About the <b><i>ntfswalk</i></b> Tool</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<p><b><i>ntfswalk</i></b> is a command line a tool that traverses a specified NTFS 
volume reading all MFT entries and pulling predefined statistics as it runs. </p> 

<p>Originally the engine was designed as a widget for other prototypes to help 
pull data out from targeted categories of files on NTFS partitions.  After 
successfully using the functionality in other tools, it was determined that 
the utility in making a standalone tool would be helpful in debugging and 
understanding the internals of any NTFS volume. This new tool, coined 
<b><i>ntfswalk</i></b> is named after its ability to walk an entire NTFS volume 
and output each MFT entry it encounters.</p>

<p>Designed to work with live NTFS partitions, there is also functionality for 
traversing NTFS images created with the 'dd' utility (as well as some versions 
of VMWare VMDK files). There are options to filter on file extension, timestamp 
range, binary signature, partial filenames and directory contents. For the 
files found, one can list the summary metadata, extract the header bytes, 
or extract the entire file contents into a designated directory. Since the 
engine is Windows API agnostic, there are compiled versions for Windows, Linux 
and Mac OS X.</p>

<p>To use this tool, an authentication file is required to be in the same 
directory as the binary for the tool to run.  The non-commercial/demonstrational-use 
EULA is part of this readme. It only activates certain capabilities of the 
tool and is meant only for demonstration purposes.  This authentication will 
eventually expire.  To activate all the functionality of the tool and use 
it on a permanent basis, a separate business license needs to be purchased. 
Contact <a href="mailto:info@tzworks.net">info&#64;tzworks.net</a> for more 
details about the using this tool for business and/or casework use.</p>
</div>

<hr/><!---------------------Usage---------------------->
<h2><a name="usage">Usage</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<p><b><i>ntfswalk</i></b> has a number of command line switches, and for the 
occasional user, it can be confusing which options can be used together and 
which cannot.</p>

<p>One can display the menu options by typing in the executable name 
with no parameters.  Below is the menu with the various options.</p>

<pre>
   ntfswalk - full ver: 0.51; Copyright (c) TZWorks LLC
   
   usage:
    (note: options with ** are enabled with a commercial license)
   
    Running 'ntfswalk' on a live volume
     ntfswalk -partition &lt;drive letter&gt; [options]
     ntfswalk -drivenum &lt;num&gt; [-offset &lt;volume offset&gt;] [options]
   
    Running 'ntfswalk' on a disk/partition image captured w/ a 'dd' type tool
     ntfswalk -image &lt;file&gt; [-offset &lt;volume offset&gt;] [options]
   
    Running 'ntfswalk' on an extracted $MFT file
     ntfswalk -mftfile &lt;name&gt; [-options]
   
    Running 'ntfswalk' on a VMWare monolithic virtual volume
     -vmdk "disk1 | disk2 | ..."               = ** source is VMWare VMDK disk(s)
   
    Filter 'OR' logic options [** some options only available w/ commercial license]
       -filter_ext "ext1 | ext2 | ..."         = extract based on these extensions
       -filter_name "name1 | name2 | ..."      = extract based on these partial names
       -filter_fullname "name1 | name2 | ..."  = ** extract based on these names
       -filter_dir "dir1 | dir2 | ..."         = ** extract 1st level files in these dirs
       -filter_file "path/file1 | ..."         = ** extract specified files
       -filter_dir_inode "inode1 | inode2 .."  = ** extract 1st level files in these dir/inodes
       -filter_inode "inode1 | inode2 | ..."   = ** extract specified inodes
       -filter_sig "mz | hive | evt | sqlite"  = ** extract based on these signatures
   
    Filter 'AND' logic options
       -filter_start_time &lt;date time&gt;          = time format "mm/dd/yyyy hh:mm:ss"
       -filter_stop_time &lt;date time&gt;           = time format "mm/dd/yyyy hh:mm:ss"
       -filter_deleted_files                   = analyzes only filerecords in $MFT
   
       [these are new / experimental]
       -filter_deleted_files_all               = analyzes both $MFT and unalloc clusters
       -filter_unalloc_clusters                = only analyze unallocated clusters
       -filter_all_clusters                    = analyze $MFT and unalloc clusters
   
    Extraction options
       -action_copy_files &lt;dir&gt; [-raw] = ** extract file into dir
                          -raw  = include slack space and skip sparse clusters]
                          -skip_sparse_clusters = don't include sparse clusters
       -action_include_header          = ** extracts first 0x20 bytes start of file
       -action_include_clusterinfo     = ** show info regarding data types/clusters
   
    Results file format options
       -csv                       = csv format, this has the most output
       -csvl2t                    = log2timeline format
       -bodyfile                  = bodyfile format
       -hashfile  "md5 | sha1"    = ** output hashfile format
   
    General purpose options
       -out &lt;results file&gt; = output results to the specified file
       -hide_dos_fntimes          = don't include dos 8.3 fn timestamps
       -hostname &lt;name&gt;           = output will contain this hostname
       -base10                    = output in base10 vice hex 
       -use_orig_ext              = only for option [-action_copy_files]
       -script &lt;file&gt;             = use file to express options
       -mftstart &lt;value&gt; [-mftrange &lt;value&gt;] = ** only process these inodes
       -filerecord_offset         = ** output the abs offset of the filerecord
       -quiet                     = ** don't show any progress during run
       -dateformat yyyy/mm/dd     = ** "mm/dd/yyyy" is the default
       -timeformat hh:mm:ss       = ** "hh:mm:ss.xxx" is the default
       -no_whitespace             = ** remove whitespace between csv delimiters
</pre>

<p> The architecture can be broken up into four main areas:
(a) source of the data, (b) filter that can be applied, (c) extraction options,
and (d) output format. </p>

<h4>Source of Data</h4>
<p>Starting with the 'source of the data', <b><i>ntfswalk</i></b> can handle
various types: (a) an $MFT extracted file (b) a 'dd' image of a drive or volume,
(c) a drive or volume currently mounted or (d) a VMWare monolithic NTFS formatted 
disk. The options available and their syntax are:</p>

<div>
<table border="1" cellpadding="2" cellspacing="0">
    <tr bgcolor="yellow">
        <th>Option</th>
        <th>Extra</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>-mftfile</td>
        <td></td>
        <td>Assuming one has an $MFT file that has been copied from a volume, one can analyze the file.  
        The syntax is:
        <font color="red"><i><b>-mftfile &lt;extracted $MFT file&gt;</b></i></font>.</td>
    </tr>
    <tr>
        <td>-image </td>
        <td></td>
        <td> Extract artifacts from a volume specified by an image and volume offset. The syntax is 
        <font color="red"><i><b>-image &lt;filename&gt; -offset &lt;volume offset&gt;</b></i></font></td>
    </tr>
    <tr>
        <td>-drivenum</td>
        <td></td>
        <td> Extract artifacts from a mounted disk specified by a drive number and volume offset. The syntax is 
        <font color="red"><i><b>-drivenum &lt;#&gt; -offset &lt;volume offset&gt;</b></i></font></td>
    </tr>
    <tr>
        <td>-partition</td>
        <td></td>
        <td> Extract artifacts from a mounted Windows volume. The syntax is 
        <font color="red"><i><b>-partition &lt;drive letter&gt;</b></i></font>.</td>
    </tr>
    <tr>
        <td>-vmdk </td>
        <td>**</td>
        <td> Extract artifacts from a VMWare monolithic NTFS formatted volume. The syntax is 
        <font color="red"><i><b>-vmdk &lt;disk name&gt;</b></i></font>.  For a collection
        of VMWare disks that include snapshots, one can use the following syntax: 
         <font color="red"><i><b>-vmdk "disk1 | disk2 | ..."</b></i></font></td>
    </tr>
</table>

<p>The options labeled as 'Extra' require a separate license for them to be unlocked.</p>

</div>


<h4>Filtering Options</h4>
<p>The second area is filtering.  This defines what files (or MFT entries) are 
analyzed and displayed to the user.  One can filter on deleted files/folders, 
by various extensions, multiple partial names, and/or binary signatures.  
Also in this area one can choose to analyze all 'unallocated clusters' instead 
of the normal 'allocated clusters' or to pull files from a specified directory.  
For binary signatures, currently <b><i>ntfswalk</i></b> allows one to find:  
registry hives, event logs or portable executable files. The options available
and their syntax are:</p>

<div>
<table border="1" cellpadding="2" cellspacing="0">
    <tr bgcolor="yellow">
        <th>Option</th>
        <th>Extra</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>-filter_ext</td>
        <td></td>
        <td>Filter on one or more extensions.  The syntax is: 
        <font color="red"><i><b>-filter_ext "&lt;ext1&gt; | "&lt;ext2&gt; | ..."</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filter_name</td>
        <td></td>
        <td>Filter on one or more <i>partial</i> names (case insensitive). The syntax is: 
        <font color="red"><i><b>-filter_name "&lt;partial name1&gt; | "&lt;partial name2&gt; | ..."</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filter_deleted_files</td>
        <td></td>
        <td>Filters on deleted files.  This option only looks only at the $MFT file to find the deleted files.</td>
    </tr>
    <tr>
        <td>-filter_fullname</td>
        <td>**</td>
        <td>Filter on one or more fully qualified path/filename entries. The syntax is: 
        <font color="red"><i><b>-filter_fullname "&lt;path\name1&gt; | "&lt;path\name1&gt; | ..."</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filter_inode</td>
        <td>**</td>
        <td>Filter on one or more inodes. The syntax is: 
        <font color="red"><i><b>-filter_inode "&lt;inode1&gt; | "&lt;inode2&gt; | ..."</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filter_deleted_files_all</td>
        <td></td>
        <td>Filters on all deleted files in a volume.  Looks at both the $MFT file and unallocated clusters to find
        deleted files. This option is still experimental, in that when scanning unallocated clusters certain boundary
        conditions may cause <i><b>ntfswalk</b></i> to crash, since various metadata will be corrupted.</td>
    </tr>
    <tr>
        <td>-filter_unalloc_clusters</td>
        <td></td>
        <td>Analyzes files and directories in a volume.  Looks at just unallocated clusters and doesn't 
        analyze the $MFT file. This option is still experimental, in that when scanning unallocated clusters 
        certain boundary conditions may cause <i><b>ntfswalk</b></i> to crash, since various metadata will be 
        corrupted.</td>
    </tr>
    <tr>
        <td>-filter_all_clusters</td>
        <td></td>
        <td>Analyzes files and directories in a volume.  Looks at both the $MFT file and unallocated clusters to find
        files and directories. This option is still experimental, in that when scanning unallocated clusters 
        certain boundary conditions may cause <i><b>ntfswalk</b></i> to crash, since various metadata will be 
        corrupted.</td>
    </tr>
    <tr>
        <td>-filter_sig</td>
        <td>**</td>
        <td>Filter on one or more built in signatures. 
        <font color="red"><i><b>mz</b></i></font> = exes, dlls, and driver files, 
        <font color="red"><i><b>hive</b></i></font> = registry hives, 
        <font color="red"><i><b>evt</b></i></font> = event logs (both .evt and .evtx types), and 
        <font color="red"><i><b>sqlite</b></i></font> = SQLite v3 databases.
        The syntax is: <font color="red"><i><b>-filter_sig "mz|hive|evt|sqlite"</b></i></font> to
        filter on all signatures associated with mz, hive, evt and sqlite.</td>
    </tr>
    <tr>
        <td>-filter_dir</td>
        <td>**</td>
        <td>Filter on one or more directories. Will filter the first level down in default mode. The syntax is:
        <font color="red"><i><b>-filter_dir "&lt;dir1&gt; | &lt;dir2&gt; | ..."</b></i></font>.  To filter
        beyond one directory, use a wildcard '*' and a number pair to specify the number of directories to 
        scan.  For example: <font color="red"><i><b>-filter_dir "c:\$Recycle.Bin\*3"</b></i></font> to enumerate
        3 directories down in the recycle bin directory. Use this wildcard carefully, in that if too many directories
        are specified, <i><b>ntfswalk</b></i> will need to take alot time to compute all the subdirectories 
        prior to processing the data.  It is usually much faster to do an entire drive in default mode than to
        specify a deep directory scan.</td>
    </tr>
    <tr>
        <td>-filter_dir_inode</td>
        <td>**</td>
        <td>Filter one or more directory inodes. Will filter the first level down. The syntax is:
        <font color="red"><i><b>-filter_dir_inode "&lt;inode1&gt; | &lt;inode2&gt; | ..."</b></i></font>. </td>
    </tr>
    <tr>
        <td>-filter_start_time</td>
        <td></td>
        <td>Filter on a time start. Time is specified in UTC format using the following notation:
         <font color="red"><i><b>mm/dd/yyyy hh:mm:ss</b></i></font>, or without time, 
         <font color="red"><i><b>mm/dd/yyyy</b></i></font>. The syntax is: 
         <font color="red"><i><b>-filter_start_time &lt;date&gt;</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filter_stop_time</td>
        <td></td>
        <td>Filter on a time stop. Time is specified in UTC format using the following notation:
         <font color="red"><i><b>mm/dd/yyyy hh:mm:ss</b></i></font>, or without time, 
         <font color="red"><i><b>mm/dd/yyyy</b></i></font>. The syntax is: 
         <font color="red"><i><b>-filter_stop_time &lt;date&gt;</b></i></font>.</td>
    </tr>
</table>

<p>The options labeled as 'Extra' require a separate license for them to be unlocked.</p>

</div>


<h4>Extraction Options</h4>

<p>The third area is the extraction options.  All options include a results file.  
This generated file will contain much of the metadata one needs for forensic 
analysis.  For more detailed analysis, one can add extra data to the results, 
including: (a) the first run of bytes for each file or (b) the cluster run 
information.  To physically extract the contents of the file, one can specify 
an archive directory as well as whether to include slack data or not. If one 
does extract the file data, <b><i>ntfswalk</i></b> will compute the MD5 hash 
of the file and annotate this data to the results file as well. The options 
available and their syntax are:</p>

<div>
<table border="1" cellpadding="2" cellspacing="0">
    <tr bgcolor="yellow">
        <th>Option</th>
        <th>Extra</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>-action_copy_files </td>
        <td>**</td>
        <td>Extracts the file data into the specified directory. The syntax is: 
        <font color="red"><i><b>-action_copy_files &lt;directory to store files&gt; [-raw] [-skip_sparse_clusters]</b></i></font>.
        The <font color="red"><i><b>-raw</b></i></font> sub-option says to copy all clusters associated with a file
        in a bit-for-bit copy operation.
        This include slack space as well as not uncompressing any data that may use native NTFS compression.  
        The <font color="red"><i><b>-skip_sparse_clusters</b></i></font> sub-option 
        says to ignore any clusters that are sparse during the copy operation.</td>
    </tr>
    <tr>
        <td>-action_include_header </td>
        <td>**</td>
        <td>Extracts the first 32 bytes of data and appends it to the CSV output</td>
    </tr>
    <tr>
        <td>-action_include_clusterinfo </td>
        <td>**</td>
        <td>Show additional information regarding data types and cluster runs and appends it to the CSV output</td>
    </tr>
</table>

<p>The options labeled as 'Extra' require a separate license for them to be unlocked.</p>

</div>


<h4>Results File Format Options</h4>

<p>The fourth area allows one to select how one wishes to see the results. 
As mentioned above, even if one only wishes to extract data to a directory, 
there will be a results file that logs all the files passing the filter tests.
The default output is plain text, which by itself, has reasonable formatting 
when viewed in notepad and word wrap is turned off. The other formats are geared 
for spreadsheet analysis or other post processing tools. Typically, any data 
containing numbers is defaulted as hexadecimal; however, there is an option to 
transform the output into base10 notation if desired. The options 
available and their syntax are:</p>

<div>
<table border="1" cellpadding="2" cellspacing="0">
    <tr bgcolor="yellow">
        <th>Option</th>
        <th>Extra</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>-csv</td>
        <td></td>
        <td>Outputs the data fields delimited by commas. Since filenames can have commas, to ensure 
        the fields are uniquely separated, any commas in the filenames get converted to spaces.</td>
    </tr>    
    <tr>
        <td>-csvl2t</td>
        <td></td>
        <td>Outputs the data fields in accordance with the log2timeline format.</td>
    </tr>
    <tr>
        <td>-bodyfile</td>
        <td></td>
        <td>Outputs the data fields in accordance with the 'body-file' version3 specified in 
        the SleuthKit. The date/timestamp outputted to the body-file are in terms of UTC.  
        So if using the body-file in conjunction with the mactime.pl utility, one needs to set 
        the environment variable TZ=UTC.</td>
    </tr>
    <tr>
        <td>-hashfile</td>
        <td>**</td>
        <td>Output a hashfile with either MD5, SHA1 or both hashes.  The syntax is:
        <font color="red"><i><b> -hashfile "md5"</b></i></font> to output the MD5
        hash,  <font color="red"><i><b> -hashfile "sha1"</b></i></font> to output the 
        SHA1 hash, or 
        <font color="red"><i><b> -hashfile "md5 | sha1"</b></i></font> to output them both.</td>
    </tr>

</table>

<p>The options labeled as 'Extra' require a separate license for them to be unlocked.</p>

</div>


<h4>General Purpose Options</h4>
<div>
<table border="1" cellpadding="2" cellspacing="0">
    <tr bgcolor="yellow">
        <th>Option</th>
        <th>Extra</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>-out</td>
        <td></td>
        <td>Put the summary information in the specified path/filename. The syntax is
        <font color="red"><i><b>-out &lt;results file&gt;</b></i></font>.</td>
    </tr>
    <tr>
        <td>-hide_dos_fntimes</td>
        <td></td>
        <td>Don't include any DOS 8.3 filename timestamps in the output</td>
    </tr>
    <tr>
        <td>-hostname</td>
        <td></td>
        <td>Option is used to populate the output records with a specified hostname. The syntax
	     is <font color="red"><i><b>-hostname &lt;name to use&gt;</b></i></font>. </td>
    </tr>
     <tr>
        <td>-script</td>
        <td></td>
        <td>Use the specified file to express which options to use. The syntax is: 
        <font color="red"><i><b>-script &lt;file&gt;</b></i></font>.</td>
    </tr>
    <tr>
        <td>-base10</td>
        <td></td>
        <td>Ensure all size/address output is displayed in base-10 format vice hexadecimal format. Default
        is hexadecimal format.</td>
    </tr>
   <tr>
        <td>-use_orig_ext</td>
        <td></td>
        <td>Normal behavior is to append a <i>".bin"</i> extension to any file copied. This option 
        says not to append the <i>.bin</i>, but to use use the original extension.</td>
    </tr>
    <tr>
        <td>-mftstart</td>
        <td>**</td>
        <td>Filter a inode range.  The syntax is: 
        <font color="red"><i><b>-mftstart &lt;inode&gt; [-mftrange &lt;number of inodes&gt;]</b></i></font>.</td>
    </tr>
    <tr>
        <td>-filerecord_offset</td>
        <td>**</td>
        <td>Output the absolute offset of the MFT filerecord metadata</td>
    </tr>
    <tr>
        <td>-quiet</td>
        <td>**</td>
        <td>This option suppresses status output as each file is processed. </td>
    </tr>
    <tr>
        <td>-no_whitespace</td>
        <td>**</td>
        <td>Used in conjunction with <font color="red"><i><b>-csv</b></i></font> option 
        to remove any whitespace between the field  value and the CSV separator.</td>
    </tr>
    <tr>
        <td>-dateformat</td>
        <td>**</td>
        <td>Output the date using the specified format. Default behavior is 
        <font color="red"><i><b>-dateformat "mm/dd/yyyy"</b></i></font>.
        This allows more flexibility to for a desired format.  For example, one 
        can use this to show year first, via 
        <font color="red"><i><b>"yyyy/mm/dd"</b></i></font> or day first, 
        via <font color="red"><i><b>"dd/mm/yyyy"</b></i></font>, or only show 2 
        digit years, via the <font color="red"><i><b>"mm/dd/yy"</b></i></font>. The 
        restriction with this option is the forward slash (/) symbol needs to separate 
        month, day and year and the month is in digit (1-12) form vice abbreviated 
        name form. </td>
    </tr>
    <tr>
        <td>-timeformat</td>
        <td>**</td>
        <td>Output the time using the specified format. Default behavior is 
        <font color="red"><i><b>-timeformat "hh:mm:ss.xxx"</b></i></font>
        One can adjust the format to microseconds, via 
        <font color="red"><i><b>"hh:mm:ss.xxxxxx"</b></i></font> or nanoseconds, 
        via <font color="red"><i><b>"hh:mm:ss.xxxxxxxxx"</b></i></font>, or no fractional seconds, via 
        <font color="red"><i><b>"hh:mm:ss"</b></i></font>. The 
        restrictions with this option is a the colon (:) symbol needs to separate hours, minutes 
        and seconds, a period (.) symbol needs to separate the seconds and fractional seconds, and the 
        repeating symbol 'x' to represent number of fractional seconds. (note: the the fractional 
        seconds applies only to those time formats that have the appropriate precision available. 
        The Windows internal filetime has, for example, 100 nsec unit precision available. 
        The DOS time format and the UNIX 'time_t' format, however, have no fractional seconds). 
        Some of the times represented by for this tool may use a time format without fractional 
        seconds and therefore will not show a greater precision beyond seconds when using this 
        option.</td>
    </tr>

</table>

<p>The options labeled as 'Extra' require a separate license for them to be unlocked.</p>

</div>
</div>


<hr/><!---------------------Examples---------------------->
<h2><a name="examples">Examples</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<p>1. Analyze a live NTFS partition and copy all PDF files to a specified directory, using the
<font color="red">-partition &lt;drive letter&gt;</font> and 
<font color="red">-action_copy_files &lt;directory to store files&gt;</font>
options.</p>
<pre>
    <b><i>ntfswalk</i></b> -partition c: -filter_ext "pdf" -action_copy_files "f:\extracted_files\pdf" -out f:\results.txt
</pre>

<p>2. Analyze all files and extract the header from each file from a specified partition, using
the <font color="red">-action_include_header</font> option.</p>
<pre>
    <b><i>ntfswalk</i></b> -partition c: -action_include_header -out "f:\mft_summary_output.txt"
</pre>

<p>3. Analyze a hidden NTFS partition.. use the <font color="red">-drivenum</font>
option.  When using this option, it 
will not be obvious what the volume offset is.  To assist in resolving the volume offset, 
this option has the ability to find the volume offsets and display them to the user.  
Therefore, one can do an initial query using the command to query the volume offsets
of drive number 0.</p>

<pre>
    <b><i>ntfswalk</i></b> -drivenum 0
</pre>

<p> If your first drive has any NTFS volumes, their offsets will be displayed...  Below is 
the output from my system, when running the above command:</p>
       
<pre>
    volume offset [ 0x100000 ] : ntfs
    volume offset [ 0x6500000 ] : ntfs
    volume offset [ 0x1870500000 ] : ntfs
</pre>

<p>One can use the returned offset to analyze any volume that is desired.  In my case 
the first NTFS volume is the hidden.  So if one wanted to extract all files from this 
hidden volume that contain the word "boot" in their filename, one would use the 
<font color="red">-filter_name &lt;partial name to filter&gt;</font> and 
<font color="red">-action_copy_files &lt;directory to store files&gt;</font> 
options.</p>
        
<pre>
    <b><i>ntfswalk</i></b> -drivenum 0 -offset 0x100000 -filter_name "boot" -action_copy_file "f:\extracted_files\boot"
</pre>

<p>4. Analyze an image of a volume the option 
<font color="red">-image  &lt;partition image&gt;</font>, and redirect the 
output to a file </p>
<pre>
    <b><i>ntfswalk</i></b> -image  &lt;partition file&gt; &gt; results.txt
</pre>

<p>5. Analyze an image of a disk via the option 
<font color="red">-image  &lt;disk image&gt; -offset &lt;volume offset&gt;</font>
and redirect the output to a file</p>
<pre>
    <b><i>ntfswalk</i></b> -image  &lt;disk image&gt; -offset &lt;volume offset&gt; &gt; results.txt
</pre>

<p>One can use the same trick discussed in a previous example to find the offset of the 
NTFS volumes within a disk image by just using the 
<font color="red">-image &lt;disk image&gt;</font> command 
and it will output the NTFS volume offsets.</p>
</div>


<hr/><!---------------------Authentication and License File---------------------->
<h2><a name="auth">Authentication and License File</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<p>This tool has authentication built into the binary.  There are two authentication 
mechanisms:  
(a) the digital certificate embedded into the binary and (b) the runtime authentication.   
For the first method, only the Windows and Mac OS-X (if available) versions have been 
signed by an X-509 digital code signing certificate, which is validated by Windows 
(or OS-X) during operation.  If the binary has been tampered with, the digital 
certificate will be invalidated.</p>

<p>For the second (runtime authentication) method, the authentication does two things: 
(a) validates that the tool has a valid license and (b) validates the 
tool's binary has not been corrupted.   The license needs to be in the same directory 
of the tool for it to authenticate.   Furthermore any modification to the license, 
either to its name or contents, will invalidate the license.   The runtime binary 
validation hashes the executable that is running and fails the authentication if it 
detects any modifications. </p>

<h4><i>Limited</i> vice <i>Full</i> in the tool's output banner</h4>

<p>The tools from TZWorks tools will output header information about the tool's version
and whether it is running in <i>limited</i> or <i>full</i> mode.  This is directly related
to what version of a license the tool authenticates with.   The <i>limited</i> keyword 
indicates some functionality of the tool is not available, and the <i>full</i> keyword 
indicates all the functionality is available.  The lacking functionality in the <i>limited</i>
version may mean one or all of the following: (a) certain options may not be available, 
(b) certain data may not be outputted in the parsed results, and (c) the license has a 
finite lifetime before expiring.</p>

</div>

<hr/><!---------------------Version history---------------------->
<h2><a name="version_history">Version history</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<ul type="square">
	<li>04/05/2014 - v0.51 - fixed various boundary conditions (with VMWare disk, OSX,
                            NTFS compression)</li>
	<li>01/16/2014 - v0.50 - auth update</li>
	<li>11/18/2013 - v0.49 - handle boundary condition for corrupted NT compressed file</li>
	<li>10/26/2013 - v0.48 - for copy operations, only output associated data for
							files copied. </li>
	<li>10/09/2013 - v0.47 - fixed boundary condition in [-filter_file] option. fixed 
								bugs in copying desired files. fixed cluster listing in 
								output.</li>
    <li>08/22/2013 - v0.46 - routine library maintenance updates</li>
    <li>07/05/2013 - v0.45 - added a number of new options based on commercial user input..
                            Filtering multiple extensions, names and directories added. 
                            Included filtering on binary signature on a few common types. 
                            Added hashing and the ability to traverse unallocated space 
                            in a volume.  Extraction of data now includes named and
                            unnamed NTFS_DATA types. Included date and time output
                            formatting flexibility.</li>
    <li>11/03/2012 - v0.44 - maintenance update of core libraries w/ bug fixes </li>
    <li>10/30/2012 - v0.43 - fixed bug w/ NTFS inadvertently added in previous version</li>
    <li>09/24/2012 - v0.42 - added hash check to ensure binary integrity</li>
    <li>07/19/2012 - v0.41 - default to UTF-8 output</li>
    <li> 04/05/2012 - v0.40 - added license authentication.   </li>
    <li>01/31/2012 - v0.39 - mods to handle outputting multiple filenames if specified in the
        MFT entry.</li>
    <li>01/26/2012 - v0.38 - changed the -csvl2t formatting based on comments recv'd. fixed
        bodyfile errors</li>
    <li>01/21/2012 - v0.37 - changed the ntfs parsing engine to ensure MFT entries with multiple
        parent directories are parsed separately. Also incorporated an option to parse standalone
        $MFT data. Deprecated some previous capabilities that weren't being used. Due to
        some false positives, modified the prototype time heuristics option to only detect
        time range errors and made it part of the default behavior.</li>
    <li>08/06/2011 - v0.36 added some additional time heuristics called '-action_time_analysis'
        to detect very rare time anomalies that can only be introduced by modifying the
        std information MFT time change. added other heuristics but they are still too prototype
        to release.</li>
    <li>06/04/2011 - v0.35 - added 32 and 64 bit versions to the mix</li>
    <li>05/21/2011 - v0.34 - NTFS library maintenance updates</li>
    <li>03/26/2011 - v0.33 - provided separation between start/stop time filtering with separate
        tags to help avoid erroneous inputs. Also separated the option -action_include_header
        into -action_include_header_ex
        &lt;num bytes&gt;
    </li>
    <li>03/19/2011 - v0.32 added option to all std info timestamps to be included in the output
        [-action_include_timestamps] and enabled functionality to extract a larger chunk
        of file header data</li>
    <li>03/05/2011 - v0.31 - added capability to access VMWare Workstation created images (signatured
        with 'KDMV')</li>
    <li>02/27/2011 - v0.3 - additional scanning options</li>
    <li>01/16/2011 - v0.2 - fixed bug in handling certain cluster boundary conditions.</li>
    <li>01/01/2011 - v0.1 - 1st prototype released for testing purposes</li>
</ul>
</div>

<hr/><!---------------------References---------------------->
<h2><a name="references">References</a>
<font size="2"><a href="#index"> (top) </a></font></h2>

<div>
<ol>
    <li><a href="http://www.ntfs.com/">http://www.ntfs.com</a> website</li>
    <li><a href="http://www.linux-ntfs.org/doku.php">http://www.linux-ntfs.org</a> website</li>
    <li>Brian Carrier's book, File System Forensic Analysis, sections on NTFS</li>
    <li>Various Microsoft Technet articles</li>
    <li>SleuthKit's <a href="http://wiki.sleuthkit.org/index.php?title=Body_file">Body file</a> format</li>
    <li><a href="http://log2timeline.net/">log2timeline</a> CSV format</li>
</ol>
</div>

<hr/><!---------------------Copyright---------------------->
<h5 align="right">Copyright &copy; TZWorks, LLC, All Rights Reserved <br />
Contact Info: <a href="mailto:info@tzworks.net">info&#64;tzworks.net</a></h5>

<p></p>
<hr />
<p></p>
</body>

</html>

